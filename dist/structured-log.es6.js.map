{"version":3,"file":"structured-log.es6.js","sources":["../src/polyfills/objectAssign.ts","../src/logEvent.ts","../src/messageTemplate.ts","../src/logger.ts","../src/consoleSink.ts","../src/batchedSink.ts","../src/filterStage.ts","../src/dynamicLevelSwitch.ts","../src/pipeline.ts","../src/sink.ts","../src/enrichStage.ts","../src/loggerConfiguration.ts","../src/index.ts"],"sourcesContent":["interface ObjectConstructor {\n  assign(target: any, ...sources: any[]): any;\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\nif (typeof Object.assign != 'function') {\n  Object.assign = function (target, varArgs) {\n    'use strict';\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        for (var nextKey in nextSource) {\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  };\n}\n","import { MessageTemplate } from './messageTemplate';\nimport { FilterStage } from './filterStage';\n\n/**\n * Represents the severity level of a log event.\n */\nexport enum LogEventLevel {\n  off =         0,\n  fatal =       1 << 0,\n  error =       fatal       | 1 << 1,\n  warning =     error       | 1 << 2,\n  information = warning     | 1 << 3,\n  debug =       information | 1 << 4,\n  verbose =     debug       | 1 << 5\n}\n\n/**\n * Represents an object that can switch between log levels.\n */\nexport interface LogEventLevelSwitch<T> {\n  fatal(): T;\n  error(): T;\n  warning(): T;\n  information(): T;\n  debug(): T;\n  verbose(): T;\n}\n\n/**\n * Checks if a log event level includes the target log event level.\n * @param {LogEventLevel} level The level to check.\n * @param {LogEventLevel} target The target level.\n * @returns True if the checked level contains the target level, or if the checked level is undefined.\n */\nexport function isEnabled(level: LogEventLevel, target: LogEventLevel): boolean {\n  return typeof level === 'undefined' || (level & target) === target;\n}\n\n/**\n * Represents a log event.\n */\nexport class LogEvent {\n  /**\n   * Creates a new log event instance.\n   */\n  constructor(timestamp: string, level: LogEventLevel, messageTemplate: MessageTemplate, properties?: Object, error?: Error) {\n    this.timestamp = timestamp;\n    this.level = level;\n    this.messageTemplate = messageTemplate;\n    this.properties = properties || {};\n    this.error = error || null;\n  }\n\n  /**\n   * Gets or sets an ISO 8601-formatted date string for when this event occurred.\n   * @example YYYY-MM-DDTHH:mm:ss.sssZ\n   */\n  timestamp: string;\n\n  /**\n   * Gets or sets the severity level of this event.\n   */\n  level: LogEventLevel;\n\n  /**\n   * Gets or sets the message template instance of this event.\n   */\n  messageTemplate: MessageTemplate;\n\n  /**\n   * Gets or sets an object containing the captured properties of this event.\n   */\n  properties: Object;\n\n  /**\n   * Gets or sets an error associated with this event.\n   */\n  error: Error;\n}\n","const tokenizer = /\\{@?\\w+}/g;\n\ninterface Token {\n  name?: string;\n  text?: string;\n  destructure?: boolean;\n  raw?: string;\n}\n\n/**\n * Represents a message template that can be rendered into a log message.\n */\nexport class MessageTemplate {\n  /**\n   * Gets or sets the raw message template of this instance.\n   */\n  raw: string;\n\n  private tokens: Token[];\n\n  /**\n   * Creates a new MessageTemplate instance with the given template.\n   */\n  constructor(messageTemplate: string) {\n    if (messageTemplate === null || !messageTemplate.length) {\n      throw new Error('Argument \"messageTemplate\" is required.');\n    }\n\n    this.raw = messageTemplate;\n    this.tokens = this.tokenize(messageTemplate);\n  }\n\n  /**\n   * Renders this template using the given properties.\n   * @param {Object} properties Object containing the properties.\n   * @returns Rendered message.\n   */\n  render(properties?: Object): string {\n    if (!this.tokens.length) {\n      return this.raw;\n    }\n    properties = properties || {};\n    const result = [];\n    for (var i = 0; i < this.tokens.length; ++i) {\n      const token = this.tokens[i];\n      if (typeof token.name === 'string') {\n        if (properties.hasOwnProperty(token.name)) {\n          result.push(this.toText(properties[token.name]));\n        } else {\n          result.push(token.raw);\n        }\n      } else {\n        result.push(token.text);\n      }\n    }\n    return result.join('');\n  }\n\n  /**\n   * Binds the given set of args to their matching tokens.\n   * @param {any} positionalArgs Arguments.\n   * @returns Object containing the properties.\n   */\n  bindProperties(positionalArgs: any): Object {\n    const result = {};\n    let nextArg = 0;\n    for (var i = 0; i < this.tokens.length && nextArg < positionalArgs.length; ++i) {\n      const token = this.tokens[i];\n      if (typeof token.name === 'string') {\n        let p = positionalArgs[nextArg];\n        result[token.name] = this.capture(p, token.destructure);\n        nextArg++;\n      }\n    }\n\n    while (nextArg < positionalArgs.length) {\n      const arg = positionalArgs[nextArg];\n      if (typeof arg !== 'undefined') {\n        result['a' + nextArg] = this.capture(arg);\n      }\n      nextArg++;\n    }\n\n    return result;\n  }\n\n  private tokenize(template: string): Token[] {\n    const tokens = [];\n\n    let result;\n    let textStart;\n\n    while ((result = tokenizer.exec(template)) !== null) {\n      if (result.index !== textStart) {\n        tokens.push({ text: template.slice(textStart, result.index) });\n      }\n\n      let destructure = false;\n\n      let token = result[0].slice(1, -1);\n      if (token.indexOf('@') === 0) {\n        token = token.slice(1);\n        destructure = true;\n      }\n\n      tokens.push({\n        name: token,\n        destructure,\n        raw: result[0]\n      });\n\n      textStart = tokenizer.lastIndex;\n    }\n\n    if (textStart >= 0 && textStart < template.length) {\n      tokens.push({ text: template.slice(textStart) });\n    }\n\n    return tokens;\n  }\n\n  private toText(property: any): string {\n    if (typeof property === 'undefined') {\n      return 'undefined';\n    }\n\n    if (property === null) {\n      return 'null';\n    }\n\n    if (typeof property === 'string') {\n      return property;\n    }\n\n    if (typeof property === 'number') {\n      return property.toString();\n    }\n\n    if (typeof property === 'boolean') {\n      return property.toString();\n    }\n\n    if (typeof property.toISOString === 'function') {\n      return property.toISOString();\n    }\n\n    if (typeof property === 'object') {\n      let s = JSON.stringify(property);\n      if (s.length > 70) {\n        s = s.slice(0, 67) + '...';\n      }\n\n      return s;\n    }\n\n    return property.toString();\n  };\n\n  private capture(property: any, destructure?: boolean): Object {\n    if (typeof property === 'function') {\n      return property.toString();\n    }\n\n    if (typeof property === 'object') {\n      // null value will be automatically stringified as \"null\", in properties it will be as null\n      // otherwise it will throw an error\n      if (property === null) {\n        return property;\n      }\n\n      // Could use instanceof Date, but this way will be kinder\n      // to values passed from other contexts...\n      if (destructure || typeof property.toISOString === 'function') {\n        return property;\n      }\n\n      return property.toString();\n    }\n\n    return property;\n  }\n}\n","import { LogEventLevel, LogEvent } from './logEvent';\nimport { MessageTemplate } from './messageTemplate';\nimport { Pipeline } from './pipeline';\nimport { Sink } from './sink';\n\n/**\n * Logs events.\n */\nexport class Logger implements Sink {\n  private pipeline: Pipeline;\n\n  suppressErrors: boolean = true;\n\n  /**\n   * Creates a new logger instance using the specified pipeline.\n   */\n  constructor(pipeline: Pipeline, suppressErrors?: boolean) {\n    this.pipeline = pipeline;\n    this.suppressErrors = typeof suppressErrors === 'undefined' || suppressErrors;\n  }\n\n  /**\n   * Logs an event with the {LogEventLevel.fatal} severity.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  fatal(messageTemplate: string, ...properties: any[]);\n\n  /**\n   * Logs an event with the {LogEventLevel.fatal} severity.\n   * @param {Error} error Error for the log event.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  fatal(error: Error, messageTemplate: string, ...properties: any[]);\n\n  fatal(errorOrMessageTemplate: Error | string, ...properties: any[]) {\n    try {\n      if (errorOrMessageTemplate instanceof Error) {\n        this.write(LogEventLevel.fatal, properties[0], properties.slice(1), errorOrMessageTemplate);\n      } else {\n        this.write(LogEventLevel.fatal, errorOrMessageTemplate, properties);\n      }\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n  \n  /**\n   * Logs an event with the {LogEventLevel.error} severity.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  error(messageTemplate: string, ...properties: any[]);\n\n  /**\n   * Logs an event with the {LogEventLevel.error} severity.\n   * @param {Error} error Error for the log event.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  error(error: Error, messageTemplate: string, ...properties: any[]);\n\n  error(errorOrMessageTemplate: Error | string, ...properties: any[]) {\n    try {\n      if (errorOrMessageTemplate instanceof Error) {\n        this.write(LogEventLevel.error, properties[0], properties.slice(1), errorOrMessageTemplate);\n      } else {\n        this.write(LogEventLevel.error, errorOrMessageTemplate, properties);\n      }\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n  \n  /**\n   * Logs an event with the {LogEventLevel.warning} severity.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  warn(messageTemplate: string, ...properties: any[]);\n\n  /**\n   * Logs an event with the {LogEventLevel.warning} severity.\n   * @param {Error} error Error for the log event.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  warn(error: Error, messageTemplate: string, ...properties: any[]);\n\n  warn(errorOrMessageTemplate: Error | string, ...properties: any[]) {\n    try {\n      if (errorOrMessageTemplate instanceof Error) {\n        this.write(LogEventLevel.warning, properties[0], properties.slice(1), errorOrMessageTemplate);\n      } else {\n        this.write(LogEventLevel.warning, errorOrMessageTemplate, properties);\n      }\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n  \n  /**\n   * Logs an event with the {LogEventLevel.information} severity.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  info(messageTemplate: string, ...properties: any[]);\n\n  /**\n   * Logs an event with the {LogEventLevel.information} severity.\n   * @param {Error} error Error for the log event.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  info(error: Error, messageTemplate: string, ...properties: any[]);\n\n  info(errorOrMessageTemplate: Error | string, ...properties: any[]) {\n    try {\n      if (errorOrMessageTemplate instanceof Error) {\n        this.write(LogEventLevel.information, properties[0], properties.slice(1), errorOrMessageTemplate);\n      } else {\n        this.write(LogEventLevel.information, errorOrMessageTemplate, properties);\n      }\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n  \n  /**\n   * Logs an event with the {LogEventLevel.debug} severity.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  debug(messageTemplate: string, ...properties: any[]);\n\n  /**\n   * Logs an event with the {LogEventLevel.debug} severity.\n   * @param {Error} error Error for the log event.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  debug(error: Error, messageTemplate: string, ...properties: any[]);\n\n  debug(errorOrMessageTemplate: Error | string, ...properties: any[]) {\n    try {\n      if (errorOrMessageTemplate instanceof Error) {\n        this.write(LogEventLevel.debug, properties[0], properties.slice(1), errorOrMessageTemplate);\n      } else {\n        this.write(LogEventLevel.debug, errorOrMessageTemplate, properties);\n      }\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n  \n  /**\n   * Logs an event with the {LogEventLevel.verbose} severity.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  verbose(messageTemplate: string, ...properties: any[]);\n\n  /**\n   * Logs an event with the {LogEventLevel.verbose} severity.\n   * @param {Error} error Error for the log event.\n   * @param {string} messageTemplate Message template for the log event.\n   * @param {any[]} properties Properties that can be used to render the message template.\n   */\n  verbose(error: Error, messageTemplate: string, ...properties: any[]);\n\n  verbose(errorOrMessageTemplate: Error | string, ...properties: any[]) {\n    try {\n      if (errorOrMessageTemplate instanceof Error) {\n        this.write(LogEventLevel.verbose, properties[0], properties.slice(1), errorOrMessageTemplate);\n      } else {\n        this.write(LogEventLevel.verbose, errorOrMessageTemplate, properties);\n      }\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Flushes the pipeline of this logger.\n   * @returns A {Promise<any>} that will resolve when the pipeline has been flushed.\n   */\n  flush(): Promise<any> {\n    return this.suppressErrors\n      ? this.pipeline.flush().catch(() => {})\n      : this.pipeline.flush();\n  }\n\n  /**\n   * Emits events through this logger's pipeline.\n   */\n  emit(events: LogEvent[]): LogEvent[] {\n    try {\n      this.pipeline.emit(events);\n      return events;\n    } catch (error) {\n      if (!this.suppressErrors) {\n        throw error;\n      }\n    }\n  }\n\n  private write(level: LogEventLevel, rawMessageTemplate: string, unboundProperties: any[], error?: Error) {\n    const messageTemplate = new MessageTemplate(rawMessageTemplate);\n    const properties = messageTemplate.bindProperties(unboundProperties);\n    const logEvent = new LogEvent(\n      new Date().toISOString(),\n      level,\n      messageTemplate,\n      properties,\n      error\n    );\n    this.pipeline.emit([logEvent]);\n  }\n}\n","import { LogEventLevel, LogEvent, isEnabled } from './logEvent';\nimport { Sink } from './sink';\nimport { MessageTemplate } from './messageTemplate';\n\nexport interface ConsoleProxy {\n  error(message?: any, ...properties: any[]);\n  warn(message?: any, ...properties: any[]);\n  info(message?: any, ...properties: any[]);\n  debug(message?: any, ...properties: any[]);\n  log(message?: any, ...properties: any[]);\n}\n\nexport interface ConsoleSinkOptions {\n  console?: any;\n  includeTimestamps?: boolean;\n  includeProperties?: boolean;\n  restrictedToMinimumLevel?: LogEventLevel;\n}\n\nexport class ConsoleSink implements Sink {\n  private options: ConsoleSinkOptions;\n  private console: ConsoleProxy;\n\n  constructor(options?: ConsoleSinkOptions) {\n    this.options = options || {};\n    const internalConsole = this.options.console || typeof console !== 'undefined' && console || null;\n    const stub = function () { };\n    this.console = {\n      error: (internalConsole && (internalConsole.error || internalConsole.log)) || stub,\n      warn:  (internalConsole && (internalConsole.warn || internalConsole.log)) || stub,\n      info:  (internalConsole && (internalConsole.info || internalConsole.log)) || stub,\n      debug: (internalConsole && (internalConsole.debug || internalConsole.log)) || stub,\n      log:   (internalConsole && internalConsole.log) || stub\n    };\n  }\n\n  public emit(events: LogEvent[]) {\n    for (let i = 0; i < events.length; ++i) {\n      const e = events[i];\n      if (!isEnabled(this.options.restrictedToMinimumLevel, e.level))\n        continue;\n\n      switch (e.level) {\n        case LogEventLevel.fatal:\n          this.writeToConsole(this.console.error, 'Fatal', e);\n          break;\n\n        case LogEventLevel.error:\n          this.writeToConsole(this.console.error, 'Error', e);\n          break;\n\n        case LogEventLevel.warning:\n          this.writeToConsole(this.console.warn, 'Warning', e);\n          break;\n\n        case LogEventLevel.information:\n          this.writeToConsole(this.console.info, 'Information', e);\n          break;\n          \n        case LogEventLevel.debug:\n          this.writeToConsole(this.console.debug, 'Debug', e);\n          break;\n          \n        case LogEventLevel.verbose:\n          this.writeToConsole(this.console.debug, 'Verbose', e);\n          break;\n\n        default: \n          this.writeToConsole(this.console.log, 'Log', e);\n          break;\n      }\n    }\n  }\n\n  public flush() {\n    return Promise.resolve();\n  }\n\n  private writeToConsole(logMethod: Function, prefix: string, e: LogEvent) {\n    let output = `[${prefix}] ${e.messageTemplate.render(e.properties)}`;\n    if (this.options.includeTimestamps) {\n      output = `${e.timestamp} ${output}`;\n    }\n    const values = [];\n    if (this.options.includeProperties) {\n      for (const key in e.properties) {\n        if (e.properties.hasOwnProperty(key)) {\n          values.push(e.properties[key]);\n        }\n      }\n    }\n    if (e.error instanceof Error) {\n      values.push('\\n', e.error);\n    }\n    logMethod(output, ...values);\n  }\n}\n","import { LogEventLevel, LogEvent, isEnabled } from './logEvent';\nimport { Sink } from './sink';\nimport { MessageTemplate } from './messageTemplate';\n\nexport interface BatchedSinkOptions {\n  /**\n   * Maximum number of events to be sent in a single batch.\n   */\n  maxSize?: number;\n\n  /**\n   * Number of seconds to wait between checking for batches.\n   */\n  period?: number;\n\n  /**\n   * {Storage} instance to be used for durable storage of log events.\n   */\n  durableStore?: Storage;\n}\n\nexport const defaultBatchedSinkOptions: BatchedSinkOptions = {\n  maxSize: 100,\n  period: 5,\n  durableStore: null\n};\n\nexport class BatchedSink implements Sink {\n  protected durableStorageKey: string = 'structured-log-batched-sink-durable-cache';\n\n  protected options: BatchedSinkOptions;\n  protected innerSink: Sink;\n  protected batchedEvents: LogEvent[];\n  private batchTimeout;\n  private batchKey;\n\n  constructor(innerSink?: Sink, options?: BatchedSinkOptions) {\n    this.innerSink = innerSink || null;\n    this.options = {\n      ...defaultBatchedSinkOptions,\n      ...(options || {})\n    };\n    this.batchedEvents = [];\n    this.cycleBatch();\n    if (this.options.durableStore) {\n      let initialBatch = [];\n      for (const key in this.options.durableStore) {\n        if (key.indexOf(this.durableStorageKey) === 0) {\n          const storedEvents = JSON.parse(this.options.durableStore.getItem(key))\n            .map(e => {\n              e.messageTemplate = new MessageTemplate(e.messageTemplate.raw);\n              return e;\n            });\n          initialBatch = initialBatch.concat(storedEvents);\n          this.options.durableStore.removeItem(key);\n        }\n      }\n      this.emit(initialBatch);\n    }\n  }\n\n  emit(events: LogEvent[]) {\n    if (this.batchedEvents.length + events.length <= this.options.maxSize) {\n      this.batchedEvents.push(...events);\n      this.storeEvents();\n    } else {\n      let cursor = this.options.maxSize - this.batchedEvents.length;\n      this.batchedEvents.push(...events.slice(0, cursor));\n      this.storeEvents();\n      while (cursor < events.length) {\n        this.cycleBatch();\n        this.batchedEvents.push(...events.slice(cursor, cursor = cursor + this.options.maxSize));\n        this.storeEvents();\n      }\n    }\n\n    return events;\n  }\n\n  flush(): Promise<any> {\n    this.cycleBatch();\n    const corePromise = this.flushCore();\n    return corePromise instanceof Promise ? corePromise : Promise.resolve();\n  }\n\n  protected emitCore(events: LogEvent[]): any {\n    return this.innerSink.emit(events);\n  }\n\n  protected flushCore(): Promise<any> {\n    return this.innerSink.flush();\n  }\n\n  protected cycleBatch() {\n    clearTimeout(this.batchTimeout);\n    if (this.batchedEvents.length) {\n      const emitPromise = this.emitCore(this.batchedEvents.slice(0));\n      if (this.options.durableStore) {\n        const previousBatchKey = this.batchKey;\n        (emitPromise instanceof Promise ? emitPromise : Promise.resolve())\n          .then(() => this.options.durableStore.removeItem(previousBatchKey));\n      }\n      this.batchedEvents.length = 0;\n    }\n    this.batchKey = `${this.durableStorageKey}-${new Date().getTime()}`;\n    if (!isNaN(this.options.period) && this.options.period > 0) {\n      this.batchTimeout = setTimeout(() => this.cycleBatch(), this.options.period * 1000);\n    }\n  }\n\n  private storeEvents() {\n    if (this.options.durableStore) {\n      this.options.durableStore.setItem(this.batchKey, JSON.stringify(this.batchedEvents));\n    }\n  }\n}\n","import { PipelineStage } from './pipeline';\nimport { LogEvent } from './logEvent';\n\nexport class FilterStage implements PipelineStage {\n  private predicate: (e: LogEvent) => boolean;\n\n  constructor(predicate: (e: LogEvent) => boolean) {\n    this.predicate = predicate;\n  }\n\n  emit(events: LogEvent[]): LogEvent[] {\n    return events.filter(this.predicate);\n  }\n\n  flush(): Promise<any> {\n    return Promise.resolve();\n  }\n}\n","import { LogEventLevel, LogEventLevelSwitch, isEnabled } from './logEvent';\nimport { FilterStage } from './filterStage';\n\n/**\n * Allows dynamic control of the logging level.\n */\nexport class DynamicLevelSwitch implements LogEventLevelSwitch<Promise<any>> {\n  private minLevel: LogEventLevel = null;\n\n  /**\n   * Gets or sets a delegate that can be called when the pipeline needs to be flushed.\n   * This should generally not be modified, as it will be provided by the pipeline stage.\n   */\n  flushDelegate: () => Promise<any> = () => Promise.resolve();\n\n  fatal() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.fatal);\n  }\n\n  error() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.error);\n  }\n\n  warning() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.warning);\n  }\n\n  information() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.information);\n  }\n\n  debug() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.debug);\n  }\n\n  verbose() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.verbose);\n  }\n\n  off() {\n    return this.flushDelegate().then(() => this.minLevel = LogEventLevel.off);\n  }\n\n  isEnabled(level: LogEventLevel) {\n    return this.minLevel === null || isEnabled(this.minLevel, level);\n  }\n}\n\nexport class DynamicLevelSwitchStage extends FilterStage {\n  private dynamicLevelSwitch: DynamicLevelSwitch;\n\n  /**\n   * Sets a delegate that can be called when the pipeline needs to be flushed.\n   */\n  setFlushDelegate(flushDelegate: () => Promise<any>) {\n    this.dynamicLevelSwitch.flushDelegate = flushDelegate;\n  }\n\n  constructor(dynamicLevelSwitch: DynamicLevelSwitch) {\n    super(e => dynamicLevelSwitch.isEnabled(e.level));\n    this.dynamicLevelSwitch = dynamicLevelSwitch;\n  }\n}\n","import { LogEvent } from './logEvent';\n\nexport interface PipelineStage {\n  emit(events: LogEvent[]): LogEvent[];\n  flush(): Promise<any>;\n}\n\nexport class Pipeline {\n  private stages: PipelineStage[];\n  private eventQueue: LogEvent[];\n  private flushInProgress: boolean;\n  private flushPromise: Promise<any>;\n\n  constructor() {\n    this.stages = [];\n    this.eventQueue = [];\n    this.flushInProgress = false;\n  }\n\n  /**\n   * Adds a stage to the end of the pipeline.\n   * @param {PipelineStage} stage The pipeline stage to add.\n   */\n  addStage(stage: PipelineStage) {\n    this.stages.push(stage);\n  }\n\n  /**\n   * Emits events through the pipeline. If a flush is currently in progress, the events will be queued and will been\n   * sent through the pipeline once the flush is complete.\n   * @param {LogEvent[]} events The events to emit.\n   */\n  emit(events: LogEvent[]): Promise<any> {\n    if (this.flushInProgress) {\n      this.eventQueue = this.eventQueue.concat(events);\n      return this.flushPromise;\n    } else {\n      if (!this.stages.length || !events.length) {\n        return Promise.resolve();\n      }\n\n      let promise = Promise.resolve(this.stages[0].emit(events));\n      for (let i = 1; i < this.stages.length; ++i) {\n        promise = promise.then(events => this.stages[i].emit(events));\n      }\n\n      return promise;\n    }\n  }\n\n  /**\n   * Flushes events through the pipeline.\n   * @returns A {Promise<any>} that resolves when all events have been flushed and the pipeline can accept new events.\n   */\n  flush(): Promise<any> {\n    if (this.flushInProgress) {\n      return this.flushPromise;\n    }\n\n    this.flushInProgress = true;\n    return this.flushPromise = Promise.resolve()\n      .then(() => {\n        if (this.stages.length === 0) {\n          return;\n        }\n\n        let promise = this.stages[0].flush();\n        for (let i = 1; i < this.stages.length; ++i) {\n          promise = promise.then(() => this.stages[i].flush());\n        }\n        return promise;\n      })\n      .then(() => {\n        this.flushInProgress = false;\n        const queuedEvents = this.eventQueue.slice();\n        this.eventQueue = [];\n        return this.emit(queuedEvents);\n      });\n  }\n}\n","import { LogEvent } from './logEvent';\nimport { PipelineStage } from './pipeline';\n\nexport interface Sink {\n  emit(events: LogEvent[]);\n  flush(): Promise<any>;\n}\n\nexport class SinkStage implements PipelineStage {\n  private sink: Sink;\n\n  constructor(sink: Sink) {\n    this.sink = sink;\n  }\n\n  emit(events: LogEvent[]) {\n    this.sink.emit(events);\n    return events;\n  }\n\n  flush() {\n    return this.sink.flush();\n  }\n}\n","import { PipelineStage } from './pipeline';\nimport { LogEvent } from './logEvent';\n\nexport type ObjectFactory = () => Object;\n\nexport class EnrichStage implements PipelineStage {\n  private enricher: Object | ObjectFactory;\n\n  constructor(enricher: Object | ObjectFactory) {\n    this.enricher = enricher;\n  }\n\n  emit(events: LogEvent[]): LogEvent[] {\n    const extraProperties = this.enricher instanceof Function ? this.enricher() : this.enricher;\n    for (let i = 0; i < events.length; ++i) {\n      Object.assign(events[i].properties, extraProperties);\n    }\n    return events;\n  }\n\n  flush(): Promise<any> {\n    return Promise.resolve();\n  }\n}\n","import { Pipeline } from './pipeline';\r\nimport { Logger } from './logger';\r\nimport { LogEvent, LogEventLevel, isEnabled, LogEventLevelSwitch } from './logEvent';\r\nimport { DynamicLevelSwitch, DynamicLevelSwitchStage } from './dynamicLevelSwitch';\r\nimport { FilterStage } from './filterStage';\r\nimport { Sink, SinkStage } from './sink';\r\nimport { EnrichStage, ObjectFactory } from './enrichStage';\r\n\r\ninterface MinLevel extends LogEventLevelSwitch<LoggerConfiguration> {\r\n  (levelOrSwitch: LogEventLevel | string | number | DynamicLevelSwitch): LoggerConfiguration;\r\n}\r\n\r\n/**\r\n * Configures pipelines for new logger instances.\r\n */\r\nexport class LoggerConfiguration {\r\n  private pipeline: Pipeline;\r\n  private _suppressErrors: boolean;\r\n\r\n  constructor() {\r\n    this.pipeline = new Pipeline();\r\n    this._suppressErrors = true;\r\n  }\r\n\r\n  /**\r\n   * Adds a sink to the pipeline.\r\n   * @param {Sink} sink The sink to add.\r\n   */\r\n  writeTo(sink: Sink): LoggerConfiguration {\r\n    this.pipeline.addStage(new SinkStage(sink));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum level for any subsequent stages in the pipeline.\r\n   */\r\n  minLevel: MinLevel = Object.assign((levelOrSwitch: LogEventLevel | string | number | DynamicLevelSwitch): LoggerConfiguration => {\r\n    if (typeof levelOrSwitch === 'undefined' || levelOrSwitch === null) {\r\n      throw new TypeError('Argument \"levelOrSwitch\" is not a valid LogEventLevel value or DynamicLevelSwitch instance.');\r\n    } else if (levelOrSwitch instanceof DynamicLevelSwitch) {\r\n      const switchStage = new DynamicLevelSwitchStage(levelOrSwitch);\r\n      const flush = this.pipeline.flush;\r\n      switchStage.setFlushDelegate(() => this.pipeline.flush());\r\n      this.pipeline.addStage(switchStage);\r\n      return this;\r\n    } else if (typeof levelOrSwitch === 'string') {\r\n      const level = <LogEventLevel>LogEventLevel[levelOrSwitch.toLowerCase()];\r\n      if (typeof level === 'undefined' || level === null) {\r\n        throw new TypeError('Argument \"levelOrSwitch\" is not a valid LogEventLevel value.');\r\n      }\r\n      return this.filter(e => isEnabled(level, e.level));\r\n    } else {\r\n      return this.filter(e => isEnabled(levelOrSwitch, e.level));\r\n    }\r\n  }, {\r\n    fatal: () =>        this.minLevel(LogEventLevel.fatal),\r\n    error: () =>        this.minLevel(LogEventLevel.error),\r\n    warning: () =>      this.minLevel(LogEventLevel.warning),\r\n    information: () =>  this.minLevel(LogEventLevel.information),\r\n    debug: () =>        this.minLevel(LogEventLevel.debug),\r\n    verbose: () =>      this.minLevel(LogEventLevel.verbose)\r\n  });\r\n\r\n  /**\r\n   * Adds a filter to the pipeline.\r\n   * @param {(e: LogEvent) => boolean} predicate Filter predicate to use.\r\n   */\r\n  filter(predicate: (e: LogEvent) => boolean): LoggerConfiguration {\r\n    if (predicate instanceof Function) {\r\n      this.pipeline.addStage(new FilterStage(predicate));\r\n    } else {\r\n      throw new TypeError('Argument \"predicate\" must be a function.');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds an enricher to the pipeline.\r\n   */\r\n  enrich(enricher: Object | ObjectFactory): LoggerConfiguration {\r\n    if (enricher instanceof Function || enricher instanceof Object) {\r\n      this.pipeline.addStage(new EnrichStage(enricher));\r\n    } else {\r\n      throw new TypeError('Argument \"enricher\" must be either a function or an object.');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable error suppression.\r\n   */\r\n  suppressErrors(suppress?: boolean): LoggerConfiguration {\r\n    this._suppressErrors = typeof suppress === 'undefined' || !!suppress;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Creates a new logger instance based on this configuration.\r\n   */\r\n  create(): Logger {\r\n    return new Logger(this.pipeline, this._suppressErrors);\r\n  }\r\n}\r\n","import './polyfills/objectAssign';\n\nexport { LogEventLevel } from './logEvent';\nexport { Logger } from './logger';\nexport { ConsoleSink } from './consoleSink';\nexport { BatchedSink } from './batchedSink';\nexport { DynamicLevelSwitch } from './dynamicLevelSwitch';\n\nimport { LoggerConfiguration } from './loggerConfiguration';\n\nexport function configure() {\n  return new LoggerConfiguration();\n}\n\nexport { LoggerConfiguration };\n"],"names":[],"mappings":"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"}