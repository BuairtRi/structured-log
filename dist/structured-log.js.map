{"version":3,"file":null,"sources":["../src/polyfill/objectAssign.js","../src/pipeline.ts","../src/pipelineStage.ts","../src/filterStage.ts","../src/enrichStage.ts","../src/logEvent.ts","../src/sink.ts","../src/messageTemplate.ts","../src/logger.ts","../src/sinkStage.ts","../src/logEventLevelSwitch.ts","../src/loggerConfiguration.ts","../src/consoleSink.ts","../src/index.ts"],"sourcesContent":["/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\nif (typeof Object.assign != 'function') {\n  Object.assign = function (target, varArgs) {\n    'use strict';\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        for (var nextKey in nextSource) {\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  };\n}\n","import { ILogEvent } from './logEvent';\nimport { Sink } from './sink';\nimport PipelineStage from './pipelineStage';\n\n/**\n * Represents the event pipeline.\n */\nexport class Pipeline {\n\n  /**\n   * If set to `true`, errors in the pipeline will not be caught and will be\n   * allowed to propagate out to the execution environment.\n   */\n  public yieldErrors: boolean = false;\n\n  private stages: PipelineStage[];\n\n  /**\n   * Creates a new Pipeline instance.\n   */\n  constructor() {\n    this.stages = [];\n  }\n\n  /**\n   * Adds a new stage to the pipeline, and connects it to the previous stage.\n   * @param {PipelineStage} stage The stage to add.\n   */\n  public addStage(stage: PipelineStage) {\n    if (typeof stage === 'undefined' || !stage) {\n      throw new Error('Argument \"stage\" cannot be undefined or null.');\n    }\n    this.stages.push(stage);\n    if (this.stages.length > 1) {\n      this.stages[this.stages.length - 2].next = this.stages[this.stages.length - 1];\n    }\n  }\n\n  /**\n   * Emits events through the pipeline.\n   * @param {LogEvent[]} events The events to emit.\n   * @returns {Promise<any>} Promise that will be resolved when all\n   * pipeline stages have resolved.\n   */\n  public emit(events: ILogEvent[]): Promise<any> {\n    try {\n      if (this.stages.length === 0) {\n        return Promise.resolve();\n      }\n\n      return this.stages[0].emit(events).catch(e => {\n        if (this.yieldErrors) {\n          throw e;\n        }\n      });\n    } catch (e) {\n      if (!this.yieldErrors) {\n        return Promise.resolve();\n      } else {\n          throw e;\n      }\n    }\n  }\n\n  /**\n   * Flushes any events through the pipeline\n   * @returns {Promise<any>} Promise that will be resolved when all\n   * pipeline stages have been flushed.\n   */\n  public flush(): Promise<any> {\n    try {\n      if (this.stages.length === 0) {\n        return Promise.resolve();\n      }\n\n      return this.stages[0].flush().catch(e => {\n        if (this.yieldErrors) {\n          throw e;\n        }\n      });\n    } catch (e) {\n      if (!this.yieldErrors) {\n        return Promise.resolve();\n      } else {\n          throw e;\n      }\n    }\n  }\n}\n","import { ILogEvent } from './logEvent';\n\n/**\n * Represents a stage in the event pipeline.\n */\nexport default class PipelineStage {\n\n  /**\n   * Points to the next stage in the pipeline.\n   */\n  public next: PipelineStage = null;\n\n  private deterministicEmit: Promise<any> = Promise.resolve();\n\n  /**\n   * Emits events to this pipeline stage, as well as the next stage in the pipeline (if any).\n   * @param {LogEvent[]} events The events to emit.\n   * @returns {Promise<any>} Promise that will be resolved when all subsequent\n   * pipeline stages have resolved.\n   */\n  public emit(events: ILogEvent[]): Promise<any> {\n    return this.deterministicEmit = this.deterministicEmit.then(() => this.next ? this.next.emit(events) : Promise.resolve());\n  }\n\n  /**\n   * Flushes this pipeline stage, as well as the next stage in the pipeline (if any).\n   * @returns {Promise<any>} Promise that will be resolved when all subsequent\n   * pipeline stages have been flushed.\n   */\n  public flush(): Promise<any> {\n    return Promise.all([this.deterministicEmit, this.next ? this.next.flush() : Promise.resolve()]);\n  }\n}\n","import { ILogEvent } from './logEvent';\nimport PipelineStage from './pipelineStage';\n\ntype Predicate<T> = (T) => boolean;\n\nexport class FilterStage extends PipelineStage {\n  private filter: Predicate<ILogEvent>;\n  constructor(filter: Predicate<ILogEvent>) {\n    super();\n    this.filter = filter;\n  }\n\n  public emit(events: ILogEvent[]): Promise<any> {\n    if (!this.next) {\n      return Promise.resolve();\n    }\n\n    return Promise.resolve()\n      .then(() => events.filter(this.filter))\n      .then(filteredEvents => this.next.emit(filteredEvents));\n  }\n}\n","import { ILogEvent } from './logEvent';\nimport PipelineStage from './pipelineStage';\n\nexport class EnrichStage extends PipelineStage {\n  private enricher: () => Object;\n  constructor(enricher: () => Object) {\n    super();\n    this.enricher = enricher;\n  }\n\n  public emit(events: ILogEvent[]): Promise<any> {\n    if (!this.next) {\n      return Promise.resolve();\n    }\n\n    return Promise.resolve()\n      .then(() => {\n        for (var i = 0; i < events.length; ++i) {\n          const e = events[i];\n          e.properties = Object.assign({}, e.properties, this.enricher());\n        }\n        return events;\n      })\n      .then(enrichedEvents => this.next.emit(enrichedEvents));\n  }\n}\n","import MessageTemplate from './messageTemplate';\n\nexport enum LogEventLevel {\n  fatal,\n  error,\n  warn,\n  warning = warn,\n  info,\n  information = info,\n  debug,\n  verbose\n}\n\nexport interface ILogEvent {\n  timestamp: string;\n  level: LogEventLevel;\n  messageTemplate: MessageTemplate;\n  properties?: Object;\n}\n","import { ILogEvent } from './logEvent';\n\nexport abstract class Sink {\n  public abstract emit(events: ILogEvent[]): Promise<any>;\n\n  public flush(): Promise<any> {\n    return Promise.resolve();\n  }\n}\n","const tokenizer = /\\{@?\\w+}/g;\n\ninterface Token {\n  name?: string;\n  text?: string;\n  destructure?: boolean;\n  raw?: string;\n}\n\nexport default class MessageTemplate {\n  public get raw() {\n    return this._raw;\n  }\n  private _raw: string;\n  private tokens: Token[];\n\n  constructor(messageTemplate: string) {\n    this._raw = messageTemplate;\n    this.tokens = this.tokenize(messageTemplate);\n  }\n\n  /**\n   * Renders this template using the given properties.\n   * @param {Object?} properties Object containing the properties.\n   * @returns Rendered message.\n   */\n  public render(properties?: Object): string {\n    if (!this.tokens.length) {\n      return this._raw;\n    }\n    const result = [];\n    for (var i = 0; i < this.tokens.length; ++i) {\n      const token = this.tokens[i];\n      if (typeof token.name === 'string') {\n        if (properties.hasOwnProperty(token.name)) {\n          result.push(this.toText(properties[token.name]));\n        } else {\n          result.push(token.raw);\n        }\n      } else {\n        result.push(token.text);\n      }\n    }\n    return result.join('');\n  }\n\n  /**\n   * Binds the given set of args to their matching tokens.\n   * @param positionalArgs Array of arguments.\n   * @returns Object containing the properties.\n   */\n  public bindProperties(positionalArgs): Object {\n    const result = {};\n    let nextArg = 0;\n    for (var i = 0; i < this.tokens.length && nextArg < positionalArgs.length; ++i) {\n      const token = this.tokens[i];\n      if (typeof token.name === 'string') {\n        let p = positionalArgs[nextArg];\n        result[token.name] = this.capture(p, token.destructure);\n        nextArg++;\n      }\n    }\n\n    while (nextArg < positionalArgs.length) {\n      const arg = positionalArgs[nextArg];\n      if (typeof arg !== 'undefined') {\n        result['a' + nextArg] = this.capture(arg);\n      }\n      nextArg++;\n    }\n\n    return result;\n  }\n\n  private tokenize(template: string): Token[] {\n    const tokens = [];\n\n    let result;\n    let textStart;\n\n    while ((result = tokenizer.exec(template)) !== null) {\n      if (result.index !== textStart) {\n        tokens.push({ text: template.slice(textStart, result.index) });\n      }\n\n      let destructure = false;\n\n      let token = result[0].slice(1, -1);\n      if (token.indexOf('@') === 0) {\n        token = token.slice(1);\n        destructure = true;\n      }\n\n      tokens.push({\n        name: token,\n        destructure,\n        raw: result[0]\n      });\n\n      textStart = tokenizer.lastIndex;\n    }\n\n    if (textStart >= 0 && textStart < template.length) {\n      tokens.push({ text: template.slice(textStart) });\n    }\n\n    return tokens;\n  }\n\n  private toText(property: any): string {\n    if (typeof property === 'undefined') {\n      return 'undefined';\n    }\n\n    if (property === null) {\n      return 'null';\n    }\n\n    if (typeof property === 'string') {\n      return property;\n    }\n\n    if (typeof property === 'number') {\n      return property.toString();\n    }\n\n    if (typeof property === 'boolean') {\n      return property.toString();\n    }\n\n    if (typeof property.toISOString === 'function') {\n      return property.toISOString();\n    }\n\n    if (typeof property === 'object') {\n      let s = JSON.stringify(property);\n      if (s.length > 70) {\n        s = s.slice(0, 67) + '...';\n      }\n\n      return s;\n    }\n\n    return property.toString();\n  };\n\n  private capture(property: any, destructure?: boolean): Object {\n    if (typeof property === 'function') {\n      return property.toString();\n    }\n\n    if (typeof property === 'object') {\n      // null value will be automatically stringified as \"null\", in properties it will be as null\n      // otherwise it will throw an error\n      if (property === null) {\n        return property;\n      }\n\n      // Could use instanceof Date, but this way will be kinder\n      // to values passed from other contexts...\n      if (destructure || typeof property.toISOString === 'function') {\n        return property;\n      }\n\n      return property.toString();\n    }\n\n    return property;\n  }\n}\n","import { ILogEvent, LogEventLevel } from './logEvent';\nimport { Pipeline } from './pipeline';\nimport { Sink } from './sink';\nimport MessageTemplate from './messageTemplate';\n\nexport class Logger extends Sink {\n  private pipeline: Pipeline;\n\n  constructor(pipeline: Pipeline) {\n    super();\n\n    if (!pipeline) {\n      throw new Error('Argument \"pipeline\" cannot be null or undefined.');\n    }\n\n    this.pipeline = pipeline;\n  }\n\n  /**\n   * Logs a message with the `Fatal` level.\n   */\n  public fatal(messageTemplate: string, ...properties: any[]) {\n    this.write(LogEventLevel.fatal, messageTemplate, properties);\n  }\n\n  /**\n   * Logs a message with the `Error` level.\n   */\n  public error(messageTemplate: string, ...properties: any[]) {\n    this.write(LogEventLevel.error, messageTemplate, properties);\n  }\n\n  /**\n   * Logs a message with the `Warning` level.\n   */\n  public warn(messageTemplate: string, ...properties: any[]) {\n    this.write(LogEventLevel.warning, messageTemplate, properties);\n  }\n\n  /**\n   * Logs a message with the `Information` level.\n   */\n  public info(messageTemplate: string, ...properties: any[]) {\n    this.write(LogEventLevel.information, messageTemplate, properties);\n  }\n\n  /**\n   * Logs a message with the `Debug` level.\n   */\n  public debug(messageTemplate: string, ...properties: any[]) {\n    this.write(LogEventLevel.debug, messageTemplate, properties);\n  }\n\n  /**\n   * Logs a message with the `Verbose` level.\n   */\n  public verbose(messageTemplate: string, ...properties: any[]) {\n    this.write(LogEventLevel.verbose, messageTemplate, properties);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  public flush(): Promise<any> {\n    return this.pipeline.flush();\n  }\n\n  public emit(events: ILogEvent[]): Promise<any> {\n    return this.pipeline.emit(events);\n  }\n\n  private write(level: LogEventLevel, rawMessageTemplate: string, properties: any[]) {\n    try {\n      const messageTemplate = new MessageTemplate(rawMessageTemplate);\n      const eventProperties = messageTemplate.bindProperties(properties);\n      const event: ILogEvent = {\n        timestamp: new Date().toISOString(),\n        level,\n        messageTemplate,\n        properties: eventProperties\n      };\n      this.pipeline.emit([event]);\n    } catch (error) {\n      if (this.pipeline.yieldErrors) {\n        throw error;\n      }\n    }\n  }\n}\n","import { ILogEvent } from './logEvent';\nimport { Sink } from './sink';\nimport PipelineStage from './pipelineStage';\n\n/**\n * Represents a stage in the pipeline that emits events to a sink.\n */\nexport class SinkStage extends PipelineStage {\n  private sink: Sink;\n  constructor (sink: Sink) {\n    super();\n    if (typeof sink === 'undefined' || !sink) {\n      throw new Error('Argument \"sink\" cannot be undefined or null.');\n    }\n    this.sink = sink;\n  }\n\n  /**\n   * Emits events to the sink, as well as the next stage in the pipeline (if any).\n   * @param {LogEvent[]} events The events to emit.\n   * @returns {Promise<void>} Promise that will be resolved when all subsequent\n   * pipeline stages have resolved.\n   */\n  public emit(events: ILogEvent[]): Promise<any> {\n    return Promise.all([this.sink.emit(events), super.emit(events)]);\n  }\n\n  /**\n   * Flushes the sink, as well as the next stage in the pipeline (if any).\n   */\n  public flush(): Promise<any> {\n    return Promise.all([this.sink.flush(), super.flush()]);\n  }\n}\n","import { ILogEvent, LogEventLevel } from './logEvent';\r\n\r\nexport interface ILogEventLevelSwitch<T> {\r\n  fatal(): T;\r\n  error(): T;\r\n  warning(): T;\r\n  information(): T;\r\n  debug(): T;\r\n  verbose(): T;\r\n}\r\n\r\n/**\r\n * Dynamically filters events based on a minimum log level.\r\n */\r\nexport class LogEventLevelSwitch implements ILogEventLevelSwitch<void> {\r\n  private currentLevel: LogEventLevel;\r\n  constructor(initialLevel?: LogEventLevel) {\r\n    this.currentLevel = initialLevel || LogEventLevel.verbose;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum level for events passing through this switch to Fatal.\r\n   */\r\n  public fatal() {\r\n    this.currentLevel = LogEventLevel.fatal;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum level for events passing through this switch to Error.\r\n   */\r\n  public error() {\r\n    this.currentLevel = LogEventLevel.error;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum level for events passing through this switch to Warning.\r\n   */\r\n  public warning() {\r\n    this.currentLevel = LogEventLevel.warning;\r\n  }\r\n\r\n  /**\r\n   * Sets the minimum level for events passing through this switch to Information.\r\n   */\r\n  public information() {\r\n    this.currentLevel = LogEventLevel.information;\r\n  }\r\n  \r\n    /**\r\n   * Sets the minimum level for events passing through this switch to Debug.\r\n   */\r\n  public debug() {\r\n    this.currentLevel = LogEventLevel.debug;\r\n  }\r\n  \r\n    /**\r\n   * Sets the minimum level for events passing through this switch to Verbose.\r\n   */\r\n  public verbose() {\r\n    this.currentLevel = LogEventLevel.verbose;\r\n  }\r\n\r\n  /**\r\n   * Returns true if an event is at or below the minimum level of this switch.\r\n   */\r\n  public filter = (event: ILogEvent): boolean => this.isEnabled(event.level);\r\n\r\n  /**\r\n   * Returns true if a level is at or below the minimum level of this switch.\r\n   */\r\n  public isEnabled(level: LogEventLevel): boolean {\r\n    return level <= this.currentLevel;\r\n  }\r\n}\r\n","import './polyfill/objectAssign';\r\n\r\nimport { Pipeline } from './pipeline';\r\nimport { FilterStage } from './filterStage';\r\nimport { EnrichStage } from './enrichStage';\r\nimport { Logger } from './logger';\r\nimport { Sink } from './sink';\r\nimport { SinkStage } from './sinkStage';\r\nimport { ILogEvent, LogEventLevel } from './logEvent';\r\nimport { ILogEventLevelSwitch, LogEventLevelSwitch } from './logEventLevelSwitch';\r\n\r\ntype Predicate<T> = (T) => boolean;\r\ntype ObjectFactory = () => Object;\r\n\r\nexport interface IMinLevel<T> extends ILogEventLevelSwitch<T> {\r\n  (level: LogEventLevel): T;\r\n}\r\n\r\nexport class LoggerConfiguration {\r\n  private pipeline: Pipeline;\r\n\r\n  constructor(pipeline?: Pipeline) {\r\n    this.pipeline = pipeline || new Pipeline();\r\n  }\r\n\r\n  public writeTo(sink: Sink): LoggerConfiguration {\r\n    this.pipeline.addStage(new SinkStage(sink));\r\n    return this;\r\n  }\r\n\r\n  public minLevel: IMinLevel<LoggerConfiguration> = Object.assign((levelOrLevelSwitch: LogEventLevel | LogEventLevelSwitch): LoggerConfiguration => {\r\n    return levelOrLevelSwitch instanceof LogEventLevelSwitch\r\n      ? this.filter(levelOrLevelSwitch.filter.bind(levelOrLevelSwitch))\r\n      : this.filter(e => e.level <= levelOrLevelSwitch);\r\n  }, {\r\n    fatal: () => this.minLevel(LogEventLevel.fatal),\r\n    error: () => this.minLevel(LogEventLevel.error),\r\n    warning: () => this.minLevel(LogEventLevel.warning),\r\n    information: () => this.minLevel(LogEventLevel.information),\r\n    debug: () => this.minLevel(LogEventLevel.debug),\r\n    verbose: () => this.minLevel(LogEventLevel.verbose)\r\n  });\r\n\r\n  public enrich(enricher: Object | ObjectFactory): LoggerConfiguration {\r\n    if (enricher instanceof Function) {\r\n      this.pipeline.addStage(new EnrichStage(enricher));\r\n    } else if (enricher instanceof Object) {\r\n      this.pipeline.addStage(new EnrichStage(() => enricher));\r\n    } else {\r\n      throw new Error('Argument \"enricher\" must be either a function or an object.');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public filter(predicate: Predicate<ILogEvent>): LoggerConfiguration {\r\n    if (predicate instanceof Function) {\r\n      this.pipeline.addStage(new FilterStage(predicate));\r\n    } else {\r\n      throw new Error('Argument \"predicate\" must be a function.');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public create(yieldErrors: boolean = false): Logger {\r\n    if (!this.pipeline) {\r\n      throw new Error('The logger for this configuration has already been created.');\r\n    }\r\n\r\n    this.pipeline.yieldErrors = yieldErrors;\r\n\r\n    const pipeline = this.pipeline;\r\n    this.pipeline = null;\r\n    return new Logger(pipeline);\r\n  }\r\n}\r\n","import { ILogEvent, LogEventLevel } from './logEvent';\nimport { Sink } from './sink';\nimport MessageTemplate from './messageTemplate';\n\nconst consoleProxy = {\n  error: (typeof console !== 'undefined' && console && (console.error || console.log)) || function () {},\n  warn:  (typeof console !== 'undefined' && console && (console.warn || console.log)) || function () {},\n  info:  (typeof console !== 'undefined' && console && (console.info || console.log)) || function () {},\n  debug: (typeof console !== 'undefined' && console && (console.debug || console.log)) || function () {},\n  log:   (typeof console !== 'undefined' && console && console.log) || function () {}\n};\n\nexport interface IConsoleSinkOptions {\n  includeTimestamps?: boolean;\n  includeProperties?: boolean;\n}\n\nexport class ConsoleSink extends Sink {\n  private options: IConsoleSinkOptions;\n\n  constructor(options?: IConsoleSinkOptions) {\n    super();\n    this.options = options || {};\n  }\n\n  public emit(events: ILogEvent[]): Promise<any> {\n    return Promise.resolve().then(() => {\n      for (let i = 0; i < events.length; ++i) {\n        const e = events[i];\n        switch (e.level) {\n          case LogEventLevel.fatal:\n            this.writeToConsole(consoleProxy.error, 'Fatal', e);\n            break;\n\n          case LogEventLevel.error:\n            this.writeToConsole(consoleProxy.error, 'Error', e);\n            break;\n\n          case LogEventLevel.warning:\n            this.writeToConsole(consoleProxy.warn, 'Warning', e);\n            break;\n\n          case LogEventLevel.information:\n            this.writeToConsole(consoleProxy.info, 'Information', e);\n            break;\n            \n          case LogEventLevel.debug:\n            this.writeToConsole(consoleProxy.debug, 'Debug', e);\n            break;\n            \n          case LogEventLevel.verbose:\n            this.writeToConsole(consoleProxy.debug, 'Verbose', e);\n            break;\n        }\n      }\n    });\n  }\n\n  private writeToConsole(logMethod: Function, prefix: string, e: ILogEvent) {\n    let output = '[' + prefix + '] ' + e.messageTemplate.render(e.properties);\n    if (this.options.includeTimestamps) {\n      output = e.timestamp + ' ' + output;\n    }\n    const values = [];\n    if (this.options.includeProperties) {\n      for (const key in e.properties) {\n        if (e.properties.hasOwnProperty(key)) {\n          values.push(e.properties[key]);\n        }\n      }\n    }\n    logMethod(output, ...values);\n  }\n}\n","import './polyfill/objectAssign';\n\nimport { LogEventLevel } from './logEvent';\nimport { LoggerConfiguration } from './loggerConfiguration';\n\nexport { ConsoleSink } from './consoleSink';\nexport { LoggerConfiguration };\nexport { LogEventLevelSwitch } from './logEventLevelSwitch';\n\nexport function configure(): LoggerConfiguration {\n  return new LoggerConfiguration();\n}\n"],"names":[],"mappings":"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"}